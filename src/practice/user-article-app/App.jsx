import React, { useEffect, useState } from "react";
import axios from "axios";

function App() {
    // Kh·ªüi t·∫°o state ƒë·ªÉ l∆∞u tr·ªØ danh s√°ch users (bao g·ªìm c·∫£ s·ªë b√†i vi·∫øt)
    const [users, setUsers] = useState([]);

    // useEffect ch·∫°y m·ªôt l·∫ßn khi component ƒë∆∞·ª£c mount
    useEffect(() => {
        // T·∫°o 2 request API ƒë·ªìng th·ªùi ƒë·ªÉ l·∫•y d·ªØ li·ªáu users v√† articles
        const getUsers = axios.get("http://localhost:3001/users");
        const getArticles = axios.get("http://localhost:3001/articles");

        // S·ª≠ d·ª•ng axios.all ƒë·ªÉ g·ªçi c·∫£ 2 API c√πng l√∫c
        axios
            .all([getUsers, getArticles])
            .then(
                // S·ª≠ d·ª•ng axios.spread ƒë·ªÉ x·ª≠ l√Ω k·∫øt qu·∫£ t·ª´ 2 API
                axios.spread((res1, res2) => {
                    // K·∫øt h·ª£p d·ªØ li·ªáu users v·ªõi s·ªë l∆∞·ª£ng b√†i vi·∫øt c·ªßa t·ª´ng user
                    const userData = res1.data.map((user) => {
                        // L·ªçc ra c√°c b√†i vi·∫øt c·ªßa user hi·ªán t·∫°i
                        // S·ª≠ d·ª•ng == thay v√¨ === ƒë·ªÉ so s√°nh c·∫£ string v√† number
                        const userArticles = res2.data.filter(
                            (article) => article.userId == user.id
                        );
                        // Tr·∫£ v·ªÅ object user v·ªõi th√™m m·∫£ng articles
                        return {
                            ...user, // Gi·ªØ nguy√™n c√°c thu·ªôc t√≠nh c·ªßa user (id, name, birthday)
                            articles: userArticles // Th√™m m·∫£ng b√†i vi·∫øt
                        };
                    });
                    // C·∫≠p nh·∫≠t state v·ªõi d·ªØ li·ªáu ƒë√£ x·ª≠ l√Ω
                    setUsers(userData);
                })
            )
            .catch((err) => {
                // X·ª≠ l√Ω l·ªói n·∫øu c√≥
                console.error("L·ªói khi g·ªçi API:", err);
            });
    }, []); // M·∫£ng dependency r·ªóng c√≥ nghƒ©a l√† useEffect ch·ªâ ch·∫°y m·ªôt l·∫ßn

    // Render giao di·ªán
    return (
        <div style={styles.container}>
            <div style={styles.card}>
                <h1 style={styles.title}>üìã Danh s√°ch ng∆∞·ªùi d√πng v√† s·ªë b√†i vi·∫øt</h1>
                {/* B·∫£ng hi·ªÉn th·ªã d·ªØ li·ªáu */}
                <table style={styles.table}>
                    <thead>
                    <tr style={styles.headerRow}>
                        <th style={styles.headerCell}>üë§ T√™n ng∆∞·ªùi d√πng</th>
                        <th style={styles.headerCell}>üéÇ NƒÉm sinh</th>
                        <th style={styles.headerCell}>üìù S·ªë b√†i vi·∫øt</th>
                    </tr>
                    </thead>
                    <tbody>
                    {/* Duy·ªát qua m·∫£ng users v√† t·∫°o ra c√°c h√†ng trong b·∫£ng */}
                    {users.map((user) => (
                        <tr key={user.id} style={styles.bodyRow}>
                            <td style={styles.cell}>{user.name}</td>
                            <td style={{ ...styles.cell, textAlign: "center" }}>
                                {user.birthday}
                            </td>
                            <td style={{ ...styles.cell, textAlign: "center" }}>
                                {/* Hi·ªÉn th·ªã s·ªë l∆∞·ª£ng b√†i vi·∫øt b·∫±ng c√°ch ƒë·∫øm length c·ªßa m·∫£ng articles */}
                                {user.articles.length}
                            </td>
                        </tr>
                    ))}
                    </tbody>
                </table>
            </div>
        </div>
    );
}

// ƒê·ªãnh nghƒ©a styles cho c√°c element trong component
const styles = {
    // Style cho container ch√≠nh - full m√†n h√¨nh v·ªõi flex ƒë·ªÉ center n·ªôi dung
    container: {
        height: "100vh",
        width: "100vw",
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        backgroundColor: "#f4f6f9",
        fontFamily: "Arial, sans-serif",
        padding: "0 20px"
    },
    // Style cho card ch·ª©a n·ªôi dung ch√≠nh
    card: {
        backgroundColor: "#fff",
        borderRadius: "12px",
        boxShadow: "0 4px 12px rgba(0, 0, 0, 0.1)",
        padding: "30px",
        maxWidth: "700px",
        width: "100%"
    },
    // Style cho ti√™u ƒë·ªÅ
    title: {
        marginBottom: "20px",
        textAlign: "center",
        color: "#2c3e50",
        fontSize: "1.6rem"
    },
    // Style cho b·∫£ng
    table: {
        width: "100%",
        borderCollapse: "collapse"
    },
    // Style cho h√†ng header
    headerRow: {
        backgroundColor: "#0070f3",
        color: "white"
    },
    // Style cho √¥ header
    headerCell: {
        padding: "14px",
        fontWeight: "bold",
        textAlign: "left",
        fontSize: "1rem"
    },
    // Style cho h√†ng d·ªØ li·ªáu
    bodyRow: {
        backgroundColor: "#f9f9f9",
        transition: "background-color 0.2s ease"
    },
    // Style cho √¥ d·ªØ li·ªáu
    cell: {
        padding: "12px",
        borderTop: "1px solid #ddd"
    }
};

export default App;